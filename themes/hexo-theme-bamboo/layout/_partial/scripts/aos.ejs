<% if(theme.aos.on===true ) { %>
  <script>
    // https://github.com/michalsnik/aos
    var themeOffset = parseInt('<%= theme.aos.offset %>') || 120;
    var themeDelay = parseInt('<%= theme.aos.delay %>') || 0;
    var themeDuration = parseInt('<%= theme.aos.duration %>') || 400;
    var themeEasing = '<%= theme.aos.easing %>' || 'ease';
    var themeOnce = eval('<%= theme.aos.once %>') || false;
    var themeMirror = eval('<%= theme.aos.mirror %>') || false;
    var themeAnchorPlacement = '<%= theme.aos.anchorPlacement %>' || 'top-bottom';
    AOS.init({
      // Global settings:
      disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
      startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on
      initClassName: 'aos-init', // class applied after initialization
      animatedClassName: 'aos-animate', // class applied on animation
      useClassNames: false, // if true, will add content of `data-aos` as classes on scroll
      disableMutationObserver: false, // disables automatic mutations' detections (advanced)
      debounceDelay: 50, // the delay on debounce used while resizing window (advanced)
      throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)

      // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
      offset: themeOffset, // offset (in px) from the original trigger point
      delay: themeDelay, // values from 0 to 3000, with step 50ms
      duration: themeDuration, // values from 0 to 3000, with step 50ms
      easing: themeEasing, // default easing for AOS animations
      once: themeOnce, // whether animation should happen only once - while scrolling down
      mirror: themeMirror, // whether elements should animate out while scrolling past them
      anchorPlacement: themeAnchorPlacement, // defines which position of the element regarding to window should trigger the animation

    });

    document.addEventListener('pjax:complete', function () {
      AOS.refresh();
    })
  </script>
<% } %>